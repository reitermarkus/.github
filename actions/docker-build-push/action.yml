inputs:
  registry:
    description: 'Docker registry'
    default: 'ghcr.io'
    type: string
  image-name:
    description: 'Docker image name'
    default: '${{ github.repository }}'
    type: string
  username:
    description: 'Username for Docker registry'
    default: '${{ github.actor }}'
    type: string
  password:
    description: 'Password for Docker registry'
    default: '${{ github.token }}'
    type: string
  platforms:
    description: 'Platforms to build for'
    default: 'linux/amd64,linux/arm64'
    type: string

outputs:
  digest:
    description: "Digest of built image"
    value: ${{ steps.set-outputs.outputs.digest }}
  image-name:
    description: "Metadata of built image"
    value: ${{ steps.set-outputs.outputs.image-name }}

runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=schedule,pattern=${{ github.ref_name }}
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6
      with:
        platforms: ${{ inputs.platforms }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
      id: build-push

    - name: Set output
      run: |
        echo "::set-output name=digest::$(echo "${metadata}" | jq -r '.["containerimage.digest"]')"
        echo "::set-output name=image-name::$(echo "${metadata}" | jq -r '.["image.name"]')"
      shell: bash
      env:
        metadata: ${{ steps.build-push.outputs.metadata }}
      id: set-outputs
